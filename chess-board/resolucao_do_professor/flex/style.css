/* Aplica box-sizing: border-box para todos os elementos, inclusive ::before e ::after
   Faz com que padding e border sejam incluídos na largura e altura total do elemento */
*, :after, :before { 
  box-sizing: border-box; /* Faz com que padding e border sejam incluídos na largura/altura dos elementos, evitando problemas de dimensionamento */
}

/* Define um valor mínimo de largura e altura para todos os elementos
   (evita problemas de elementos colapsando para 0) */
* {
  min-width: 0;   /* Garante que nenhum elemento terá largura mínima diferente de 0 (evita overflow inesperado) */
  min-height: 0;  /* Garante que nenhum elemento terá altura mínima diferente de 0 */
}

/* Estilização do body (corpo da página) */
body {
  background: white;      /* Define a cor de fundo da página como branca */
  display: flex;            /* Torna o body um container flexível */
  align-items: center;      /* Alinha o conteúdo verticalmente ao centro */
  justify-content: center;  /* Alinha o conteúdo horizontalmente ao centro */
  width: 100%;              /* Faz o body ocupar toda a largura da janela */
  height: 100vh;            /* Faz o body ocupar 100% da altura da janela (viewport height) */
  margin: 0;                /* Remove as margens padrão do navegador */
  padding: 1rem;            /* Adiciona um espaçamento interno de 1 rem */
}

/* Estilização do container que representa o tabuleiro de xadrez */
.container {
  background-color: black;  /* Define o fundo da área do tabuleiro como preto */
  display: flex;              /* Torna o container um flex container */
  border: 5px solid black;  /* Cria uma borda preta de 5px ao redor do tabuleiro */
  flex-wrap: wrap;            /* Permite que os elementos internos (linhas) quebrem para a próxima linha */
  width: 810px;               /* Define a largura fixa do tabuleiro (810px) */
  height: 810px;              /* Define a altura fixa do tabuleiro (810px) */
}

/* Estilização das linhas do tabuleiro */
.row {
  width: 100%;      /* Cada linha ocupa 100% da largura do container */
  display: flex;    /* Define cada linha como um flex container (facilita a distribuição dos quadrados) */
  flex-wrap: wrap;  /* Permite que os quadrados se quebrem dentro da linha, se necessário */
}

/* Estilização dos quadrados (casas) do tabuleiro */
.square {
  width: 100px;             /* Define a largura de cada quadrado (100px) */
  height: 100px;            /* Define a altura de cada quadrado (100px) */
  display: flex;            /* Torna cada quadrado um flex container */
  justify-content: center;  /* Centraliza o conteúdo (imagem) horizontalmente */
  align-items: center;      /* Centraliza o conteúdo (imagem) verticalmente */
  flex-wrap: wrap;          /* Permite que o conteúdo interno se quebre, se necessário (não é muito usado aqui, mas está preparado) */
}

/* Estilização específica para os quadrados brancos , */
.row:nth-child(even) .square:nth-child(even),
.row:nth-child(odd) .square:nth-child(odd) {
  background-color: white; 
  /* Define quadrados brancos: 
  - Quando a linha é par e o quadrado é par
  - Quando a linha é ímpar e o quadrado é ímpar
  Isso cria o padrão de tabuleiro de xadrez (xadrez branco) */
}

/* Estilização específica para os quadrados pretos */
.row:nth-child(even) .square:nth-child(odd),
.row:nth-child(odd) .square:nth-child(even) {
  background-color: #6f6f76; 
  /* Define quadrados cinza escuro:
  - Quando a linha é par e o quadrado é ímpar
  - Quando a linha é ímpar e o quadrado é par
  Isso completa o padrão quadriculado do tabuleiro */
}

/* Estilização das imagens dentro dos quadrados */
.square img {
  width: 100%;          /* Faz a imagem ocupar toda a largura do quadrado */
  height: 100%;         /* Faz a imagem ocupar toda a altura do quadrado */
  object-fit: contain;  /* Faz a imagem caber dentro do quadrado sem distorcer (mantém proporção) */
  padding: 10px;        /* Adiciona espaço interno entre a borda do quadrado e a imagem */
}
